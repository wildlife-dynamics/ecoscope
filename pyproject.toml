[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]

[project]
name="ecoscope"
dynamic = ["version"]
description="Standard Analytical Reporting Framework for Conservation"
readme = "README.rst"
authors = [
  { name = "Jake Wall", email = "walljcg@gmail.com" }
]
license = {file = "LICENSE"}
classifiers=[
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.4",
    "Programming Language :: Python :: 3.5",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    "backoff",
    "earthengine-api",
    "earthranger-client @ git+https://github.com/PADAS/er-client@v1.2.3",
    "geopandas<=0.14.2",
    "pyproj",
    "rasterio",
    "tqdm",
]

[project.urls]
Homepage = "https://ecoscope.io"
Repository = "https://github.com/wildlife-dynamics/ecoscope"
Tracker = "https://github.com/wildlife-dynamics/ecoscope/issues"

[project.optional-dependencies]
analysis = [
    "astroplan",
    "datashader",
    "igraph",
    "mapclassify",
    "matplotlib",
    "networkx",
    "numba",
    "scipy",
    "scikit-image",
    "scikit-learn",
]
mapping = [
    "lonboard @ git+https://github.com/wildlife-dynamics/lonboard@77c56d30a9c2dd96fd863e910bf62952cfa36da8",
    "matplotlib",
    "mapclassify",
]
plotting = [
    "kaleido",
    "plotly",
    "scikit-learn",
]
test = [
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-mock",
    "pytest-reportlog",
]
docs = [
    "myst-parser",
    "nbsphinx",
    "pydata-sphinx-theme",
    "sphinx",
    "sphinx-autoapi",
]
all = [
    "ecoscope[analysis,mapping,plotting,test,docs]",
]

[tool.pytest.ini_options]
testpaths = "tests"
filterwarnings = [
    "ignore:distutils Version classes are deprecated. Use packaging.version instead.:DeprecationWarning",
    'ignore:Feature.geometry\(\) is deprecated. Use Element.geometry\(\):DeprecationWarning',
]

[tool.black]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | \.env
  | _build
  | buck-out
  | build
  | dist
  | notebooks
  | env

)/
'''

[tool.coverage.run]
source = ['ecoscope']
omit = ['ecoscope/contrib/*']

[tool.setuptools]
packages=[
        "ecoscope",
        "ecoscope.analysis",
        "ecoscope.analysis.UD",
        "ecoscope.base",
        "ecoscope.contrib",
        "ecoscope.io",
        "ecoscope.mapping",
        "ecoscope.plotting",
    ]
    
[tool.setuptools_scm]
write_to = "ecoscope/_version.py"
write_to_template = "__version__ = '{version}'"
